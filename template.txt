
# Updated sample dataframe
data = {
    'date': ['2023-08-01', '2023-08-02', '2023-08-03', '2023-08-04', '2023-08-01', '2023-08-02', '2023-08-03', '2023-08-04', '2023-08-01', '2023-08-02', '2023-08-03', '2023-08-04', '2023-08-01', '2023-08-02', '2023-08-03', '2023-08-04'],
    'record_id': list(range(1, 17)),
    'base_word': ['apple', 'apple', 'apple', 'apple', 'banana', 'banana', 'banana', 'banana', 'apple', 'apple', 'apple', 'apple', 'banana', 'banana', 'banana', 'banana'],
    'captured_timestamp': ['2023-08-01', '2023-08-02', '2023-08-03', '2023-08-04', 
                           '2023-08-01', '2023-08-02', '2023-08-03', '2023-08-04',
                           '2023-08-01', '2023-08-02', '2023-08-03', '2023-08-04',
                           '2023-08-01', '2023-08-02', '2023-08-03', '2023-08-04'],
    'captured_word': ['green', 'green', 'green', 'green', 'yellow', 'yellow', 'yellow', 'yellow', 'red', 'red', 'red', 'red', 'green', 'green', 'green', 'green'],
    'captured_word_count': [5, 8, 12, 14, 10, 12, 15, 18, 6, 9, 11, 13, 15, 16, 17, 19]
}

df = pd.DataFrame(data)



import pandas as pd
import matplotlib.pyplot as plt
import ipywidgets as widgets
from IPython.display import display, clear_output

# Create a dropdown widget for selecting the base_word
dropdown = widgets.Dropdown(
    options=df['base_word'].unique(),
    value=df['base_word'].unique()[0],
    description='Base Word:',
)
output = widgets.Output()

def plot_chart(base_word):
    subset_df = df[df['base_word'] == base_word]
    subset_df = subset_df.sort_values(by='date')  # Sorting the subset by date
    captured_words = subset_df['captured_word'].unique()
    
    # Specify colors for the lines
    colors = ['red', 'blue', 'green', 'yellow', 'purple', 'cyan', 'orange', 'pink', 'grey', 'brown']
    
    plt.figure(figsize=(14, 8))
    for idx, word in enumerate(captured_words):
        word_data = subset_df[subset_df['captured_word'] == word]
        plt.plot(word_data['date'], word_data['captured_word_count'], label=word, marker='o', color=colors[idx % len(colors)])
    
    plt.legend(loc='upper left')
    plt.title(f'Daily Counts for Captured Words of Base Word: {base_word}')
    plt.xlabel('Date')
    plt.ylabel('Count')
    plt.xticks(rotation=45)
    plt.tight_layout()
    plt.grid(True, which='both', linestyle='--', linewidth=0.5)
    plt.show()


def on_dropdown_change(change):
    if change['type'] == 'change' and change['name'] == 'value':
        clear_output(wait=True)
        display(dropdown, output)
        with output:
            clear_output(wait=True)
            plot_chart(change['new'])

dropdown.observe(on_dropdown_change)

display(dropdown, output)
plot_chart(dropdown.value)