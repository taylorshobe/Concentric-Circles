def generate_phrase_sql(row, block_id, phrase_group_id, standalone_pg):

    try:
        phrases = row['phrase_group'].split(", ")
        logging.info(f"Extracted phrases: {phrases}")
    except Exception as e:
        logging.error(f"Error splitting phrase_group: {str(e)}")
        return None

    try:
        phrases = [phrases.replace("'", "") for phrase in phrases]
        logging.info(f"Phrases after removing apostrophes: {phrases}")
    except Exception as e:
        logging.error(f"Error processing apostrophes in phrases: {str(e)}")
        return None

    try:
        words = list(set([phrase.split()[0].upper() for phrase in phrases]))
        logging.info(f"Extracted first words: {words}")
    except Exception as e:
        logging.error(f"Error extracting first words: {str(e)}")
        return None

    # ... continue with other blocks in a similar fashion ...

    try:
        sql = textwrap.dedent(f"""
        # ... your SQL generation code here ...
        """)
        logging.info(f"Generated SQL: \n{sql}")
        return sql
    except Exception as e:
        logging.error(f"Error generating SQL statement: {str(e)}")
        return None
