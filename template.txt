import re
import pandas as pd

# Generate SQL based on phrases
def generate_sql_query(df_clean_data):
    unique_phrases = df_clean_data['phrase_group'].unique().tolist()
    
    phrases_cte = "\n".join([f'SELECT "{re.escape(phrase)}" AS phrase' for phrase in unique_phrases])
    
    base_sql = """
WITH phrase_list AS (
    {phrases_cte}
)

SELECT 
    date, 
    record_id, 
    timestamp, 
    utterance,
    ARRAY_AGG(phrase) OVER(PARTITION BY date, record_id, utterance) AS matched_phrases
FROM
    query_key
JOIN
    phrase_list
ON
    REGEXP_CONTAINS(utterance, phrase)
    """
    
    return base_sql.format(phrases_cte=phrases_cte)

# Execute SQL with the provided cursor
def execute_sql_with_cursor(cursor, sql):
    cursor.execute(sql)
    
    columns = [desc[0] for desc in cursor.description]
    results = cursor.fetchall()
    result_df = pd.DataFrame.from_records(results, columns=columns)
    
    return result_df

# Given that you already have the connection and cursor established
gcp_connection = create_gcp_connection()
gcp_cursor = gcp_connection.cursor()

# Generate the SQL and execute it
sql_query = generate_sql_query(df_clean_data)
result_df = execute_sql_with_cursor(gcp_cursor, sql_query)

print(result_df)
