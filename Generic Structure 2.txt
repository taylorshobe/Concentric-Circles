import pandas as pd
import datetime
import pyodbc

def extract_and_store_words(record_id, target_word, target_timestamp, milliseconds, connection):
    # Calculate time boundaries
    delta = datetime.timedelta(milliseconds=milliseconds)
    start_time = target_timestamp - delta
    end_time = target_timestamp + delta
    
    # Create temporary table
    temp_table_creation_query = """
        CREATE TEMPORARY TABLE temp_captured_words AS (
            SELECT record_id, your_timestamp_column, text
            FROM `your_project_id.your_dataset.your_transcript_table`
            WHERE record_id = ?
            AND TIMESTAMP(your_timestamp_column) BETWEEN TIMESTAMP(?) AND TIMESTAMP(?)
            ORDER BY your_timestamp_column ASC
        )
    """
    
    cursor = connection.cursor()
    
    # Create temp table
    cursor.execute(temp_table_creation_query, (record_id, start_time, end_time))
    
    # Now, fetch data from the temporary table into a pandas dataframe
    select_temp_query = "SELECT * FROM temp_captured_words"
    
    # Use the cursor to execute and fetch the results
    cursor.execute(select_temp_query)
    rows = cursor.fetchall()
    
    # Extract the column names from the cursor description for dataframe columns
    columns = [column[0] for column in cursor.description]
    
    # Convert the rows into a pandas dataframe
    df = pd.DataFrame(rows, columns=columns)
    
    cursor.close()
    return df

# Create a connection to your BigQuery via pyodbc
conn = pyodbc.connect("Your Connection String Here")

# Call the function
record_id_sample = 1  # Replace with your desired record_id
target_word_sample = "example"  # Replace with your desired word
target_timestamp_sample = datetime.datetime(2022, 1, 1, 12, 0, 0)  # Replace with your desired timestamp

df = extract_and_store_words(record_id_sample, target_word_sample, target_timestamp_sample, 5000, conn)
print(df)
