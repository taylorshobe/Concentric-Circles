import logging

def generate_transcript_utterance(df):
    html_output = []

    for _, row in df.iterrows():
        if row['pcd'] == 'Customer':
            bg_color = 'lightyellow'
        else:
            bg_color = 'white'

        # Create Div string, per row
        div_string = f'''
        <div style="background-color: {bg_color}; padding: 5px; width: 80%; border-radius: 10px;">
            <h5 style="margin: 0px">{row["pcd"]}</h5>
            <p style="margin: 0px">{row["seq"]}</p>
            <p>{row["conversation"]}</p>
        </div>
        <br>
        '''
        html_output.append(div_string)

    # Combine all the strings into one big HTML string
    all_divs = ''.join(html_output)

    # Now wrap the entire collection of divs inside a parent div
    final_html = f'''
    <div style="background-color: lightgray; padding: 5px;">
        <h2>This is a div</h2>
        {all_divs}
    </div>
    '''
    
    logging.info(final_html)
    return final_html

my_output = generate_transcript_utterance(df_transcript_sample)






import dash_html_components as html

def generate_transcript_utterance(df):
    children_elements = []

    for _, row in df.iterrows():
        if row['pcd'] == 'Customer':
            bg_color = 'lightyellow'
        else:
            bg_color = 'white'

        # Create Dash Div component, per row
        div_component = html.Div(
            children=[
                html.H5(row["pcd"], style={'margin': '0px'}),
                html.P(row["seq"], style={'margin': '0px'}),
                html.P(row["conversation"])
            ],
            style={
                "background-color": bg_color,
                'padding': '5px',
                'width': '80%',
                'border-radius': '10px'
            }
        )
        children_elements.append(div_component)
        children_elements.append(html.Br())  # Add a break after each div

    # Now wrap the entire collection of divs inside a parent div
    final_div = html.Div(
        children=[
            html.H2('This is a div'),
            *children_elements  # Unpack all child elements here
        ],
        style={"background-color": 'lightgray', 'padding': '5px'}
    )
    
    return final_div

# Get the Dash components
my_output = generate_transcript_utterance(df_transcript_sample)

